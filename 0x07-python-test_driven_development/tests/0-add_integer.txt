# 0-add_integer.txt
===============================
 How to Use 0-add_integer.py
===============================

This library is very simple, since it only has one function called
``my_function()``.

Numbers
=======

``add_integer()`` returns the sum of its arguments.  For numbers,
that value is equivalent to using the ``+`` operator.

::

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(1, 2)
	3

Try with negative numbers

::

	>>> add_integer(100, -2)
	98

Just a as an input

::

	>>> add_integer(2)
	100

floating-point values

::

	>>> add_integer(100.3, -2)
	98

b as a string

::

	>>> add_integer(4, "School")
	Traceback (most recent call last):
	  File "<stdin>", line 1, in <module>
	  File "/home/andreshugueth/Holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    		raise TypeError("b must be an integer")
	TypeError: b must be an integer

None argument

::

	>>> add_integer(None)
	Traceback (most recent call last):
  	  File "<stdin>", line 1, in <module>
  	  File "/home/andreshugueth/Holberton/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 12, in add_integer
    		raise TypeError("a must be an integer")
	TypeError: a must be an integer
